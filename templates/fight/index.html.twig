{% extends 'base.html.twig' %}

{% block title %}Fight!{% endblock %}

{% block stylesheets %}
<link href="{{ asset('css/fight.css') }}" rel="stylesheet">
<style>
.player-container .health-bar::after {
    width: calc({{ player.health }}%);
}

.moviemon-container .health-bar::after {
    width: calc({{ moviemon.health }}%);
}
</style>
{% endblock %}

{% block body %}
<div class="fight-container">
    <div class="example-wrapper">
        <h1> Fight! âœ…</h1>
    </div>
    
    <div class="player-container">
        <ul>
            <li class="player-image">
                <img src="{{ asset('images/ash_moviemon.jpg') }}" alt="ash_moviemon">
            </li>
            <li class="player-name">
                {{ player.name }}
            </li>
            <li class="player-health">
                Health: <span id="health-player">{{ player.health }}</span>/100
                <span class="health-bar"></span>
            </li>
            <li class="player-strength">
                Strength: {{ player.strength }}
            </li>
            <li class="player-attack">
                <a href="{{ path('app_fight_attack', {game_id: game.id, moviemon_id: moviemon.id}) }}"> ATTACK </a>
            </li>
            <li class="player-escape">
                <a href="{{ path('app_fight_escape', {game_id: game.id, moviemon_id: moviemon.id}) }}"> ESCAPE </a>
            </li>
        </ul>
    </div>
    
    <div class="moviemon-container">
        <ul>
            <li class="moviemon-poster">
                <img src="{{ moviemon.poster }}" alt="{{ moviemon.title }}">
            </li>
            <li class="moviemon-title">
                {{ moviemon.title }}
            </li>
            <li class="moviemon-health">
                Health: {{ moviemon.health }}/100
                <span class="health-bar"></span>
            </li>
            <li class="moviemon-strength">
                Strength: {{ moviemon.strength }}
            </li>
        </ul>
    </div>
</div>
<script>
const gameId = {{ game.id }};
const moviemonId = {{ moviemon.id }};
const playerHealthSpan = document.getElementById('health-player');
let attackInterval = null;
function enemyAttack() {
    fetch(`/fight/enemy-attack/${gameId}/${moviemonId}`)
        .then(res => res.json())
        .then(data => {
            if (data.status === 'ok') {
                window.location.reload();
                playerHealthSpan.textContent = data.player_health;
                // Se il player Ã¨ morto, ferma gli attacchi e torna alla world map
                if (data.player_health <= 0) {
                    clearInterval(attackInterval);
                    alert("ðŸ’€ Game Over!");
                    window.location.href = `/`;
                }
            } else if (data.status === 'game_over') {
                clearInterval(attackInterval);
                alert("ðŸ’€ Game Over!");
                window.location.href = `/`;
            }
        })
        .catch(err => {
            console.error("Errore durante l'attacco:", err);
            clearInterval(attackInterval); // ferma il loop in caso di errore
        });
}
// Avvia il ciclo ogni 3 secondi
attackInterval = setInterval(enemyAttack, 3000);
// Quando lâ€™utente lascia la pagina (ATTACK o ESCAPE)
window.addEventListener("beforeunload", () => {
    clearInterval(attackInterval);
});
</script>
{% endblock %}